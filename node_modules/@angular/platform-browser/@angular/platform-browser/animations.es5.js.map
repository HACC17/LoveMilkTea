{"version":3,"file":"animations.es5.js","sources":["../../../../../packages/platform-browser/animations/public_api.ts","../../../../../packages/platform-browser/animations/src/animations.ts","../../../../../packages/platform-browser/animations/src/private_export.ts","../../../../../packages/platform-browser/animations/src/module.ts","../../../../../packages/platform-browser/animations/src/providers.ts","../../../../../packages/platform-browser/animations/src/animation_renderer.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\nexport {BrowserAnimationsModule,NoopAnimationsModule,ɵAnimationRenderer,ɵAnimationRendererFactory} from './src/animations';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\nexport {BrowserAnimationsModule, NoopAnimationsModule} from './module';\nexport {ɵAnimationRenderer,ɵAnimationRendererFactory} from './private_export';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport {AnimationRenderer as ɵAnimationRenderer, AnimationRendererFactory as ɵAnimationRendererFactory} from './animation_renderer';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {BROWSER_ANIMATIONS_PROVIDERS, BROWSER_NOOP_ANIMATIONS_PROVIDERS} from './providers';\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class BrowserAnimationsModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [BrowserModule],\n  providers: BROWSER_ANIMATIONS_PROVIDERS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BrowserAnimationsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserAnimationsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserAnimationsModule.ctorParameters;\n}\n\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class NoopAnimationsModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [BrowserModule],\n  providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NoopAnimationsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNoopAnimationsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoopAnimationsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AnimationDriver, ɵAnimationEngine as AnimationEngine, ɵAnimationStyleNormalizer as AnimationStyleNormalizer, ɵDomAnimationEngine as DomAnimationEngine, ɵNoopAnimationDriver as NoopAnimationDriver, ɵNoopAnimationEngine as NoopAnimationEngine, ɵWebAnimationsDriver as WebAnimationsDriver, ɵWebAnimationsStyleNormalizer as WebAnimationsStyleNormalizer, ɵsupportsWebAnimations as supportsWebAnimations} from '@angular/animations/browser';\nimport {Injectable, NgZone, Provider, RendererFactory2} from '@angular/core';\nimport {ɵDomRendererFactory2 as DomRendererFactory2} from '@angular/platform-browser';\n\nimport {AnimationRendererFactory} from './animation_renderer';\nexport class InjectableAnimationEngine extends DomAnimationEngine {\n/**\n * @param {?} driver\n * @param {?} normalizer\n */\nconstructor(driver: AnimationDriver, normalizer: AnimationStyleNormalizer) {\n    super(driver, normalizer);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AnimationDriver, },\n{type: AnimationStyleNormalizer, },\n];\n}\n\nfunction InjectableAnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectableAnimationEngine.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInjectableAnimationEngine.ctorParameters;\n}\n\n/**\n * @return {?}\n */\nexport function instantiateSupportedAnimationDriver() {\n  if (supportsWebAnimations()) {\n    return new WebAnimationsDriver();\n  }\n  return new NoopAnimationDriver();\n}\n/**\n * @return {?}\n */\nexport function instantiateDefaultStyleNormalizer() {\n  return new WebAnimationsStyleNormalizer();\n}\n/**\n * @param {?} renderer\n * @param {?} engine\n * @param {?} zone\n * @return {?}\n */\nexport function instantiateRendererFactory(\n    renderer: DomRendererFactory2, engine: AnimationEngine, zone: NgZone) {\n  return new AnimationRendererFactory(renderer, engine, zone);\n}\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nexport const /** @type {?} */ BROWSER_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationDriver, useFactory: instantiateSupportedAnimationDriver},\n  {provide: AnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer},\n  {provide: AnimationEngine, useClass: InjectableAnimationEngine}, {\n    provide: RendererFactory2,\n    useFactory: instantiateRendererFactory,\n    deps: [DomRendererFactory2, AnimationEngine, NgZone]\n  }\n];\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nexport const /** @type {?} */ BROWSER_NOOP_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationEngine, useClass: NoopAnimationEngine}, {\n    provide: RendererFactory2,\n    useFactory: instantiateRendererFactory,\n    deps: [DomRendererFactory2, AnimationEngine, NgZone]\n  }\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationTriggerMetadata} from '@angular/animations';\nimport {ɵAnimationEngine as AnimationEngine} from '@angular/animations/browser';\nimport {Injectable, NgZone, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '@angular/core';\nexport class AnimationRendererFactory implements RendererFactory2 {\n/**\n * @param {?} delegate\n * @param {?} _engine\n * @param {?} _zone\n */\nconstructor(\nprivate delegate: RendererFactory2,\nprivate _engine: AnimationEngine,\nprivate _zone: NgZone) {\n  }\n/**\n * @param {?} hostElement\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(hostElement: any, type: RendererType2): Renderer2 {\n    let /** @type {?} */ delegate = this.delegate.createRenderer(hostElement, type);\n    if (!hostElement || !type || !type.data || !type.data['animation']) return delegate;\n\n    const /** @type {?} */ namespaceId = type.id;\n    const /** @type {?} */ animationTriggers = /** @type {?} */(( type.data['animation'] as AnimationTriggerMetadata[]));\n    animationTriggers.forEach(\n        trigger => this._engine.registerTrigger(trigger, namespaceify(namespaceId, trigger.name)));\n    return new AnimationRenderer(delegate, this._engine, this._zone, namespaceId);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RendererFactory2, },\n{type: AnimationEngine, },\n{type: NgZone, },\n];\n}\n\nfunction AnimationRendererFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationRendererFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnimationRendererFactory.ctorParameters;\n/** @type {?} */\nAnimationRendererFactory.prototype.delegate;\n/** @type {?} */\nAnimationRendererFactory.prototype._engine;\n/** @type {?} */\nAnimationRendererFactory.prototype._zone;\n}\n\nexport class AnimationRenderer implements Renderer2 {\npublic destroyNode: ((node: any) => any)|null = null;\nprivate _flushPromise: Promise<any>|null = null;\n/**\n * @param {?} delegate\n * @param {?} _engine\n * @param {?} _zone\n * @param {?} _namespaceId\n */\nconstructor(\npublic delegate: Renderer2,\nprivate _engine: AnimationEngine,\nprivate _zone: NgZone,\nprivate _namespaceId: string) {\n    this.destroyNode = this.delegate.destroyNode ? (n) => delegate.destroyNode !(n) : null;\n  }\n/**\n * @return {?}\n */\nget data() { return this.delegate.data; }\n/**\n * @return {?}\n */\ndestroy(): void { this.delegate.destroy(); }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    return this.delegate.createElement(name, namespace);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any { return this.delegate.createComment(value); }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any { return this.delegate.createText(value); }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void { this.delegate.addClass(el, name); }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void { this.delegate.removeClass(el, name); }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    this.delegate.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { this.delegate.setValue(node, value); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    this._engine.onInsert(newChild, () => this.delegate.appendChild(parent, newChild));\n    this._queueFlush();\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    this._engine.onInsert(newChild, () => this.delegate.insertBefore(parent, newChild, refChild));\n    this._queueFlush();\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    this._engine.onRemove(oldChild, () => {\n      // Note: if an component element has a leave animation, and the component\n      // a host leave animation, the view engine will call `removeChild` for the parent\n      // component renderer as well as for the child component renderer.\n      // Therefore, we need to check if we already removed the element.\n      if (this.delegate.parentNode(oldChild)) {\n        this.delegate.removeChild(parent, oldChild);\n      }\n    });\n    this._queueFlush();\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    if (name.charAt(0) == '@') {\n      this._engine.setProperty(el, namespaceify(this._namespaceId, name.substr(1)), value);\n      this._queueFlush();\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(target: 'window'|'document'|'body'|any, eventName: string, callback: (event: any) => any):\n      () => void {\n    if (eventName.charAt(0) == '@') {\n      const /** @type {?} */ element = resolveElementFromTarget(target);\n      const [name, phase] = parseTriggerCallbackName(eventName.substr(1));\n      return this._engine.listen(\n          element, namespaceify(this._namespaceId, name), phase, (event: any) => {\n            const /** @type {?} */ e = /** @type {?} */(( event as any));\n            if (e.triggerName) {\n              e.triggerName = deNamespaceify(this._namespaceId, e.triggerName);\n            }\n            this._zone.run(() => callback(event));\n          });\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @return {?}\n */\nprivate _queueFlush() {\n    if (!this._flushPromise) {\n      this._zone.runOutsideAngular(() => {\n        this._flushPromise = Promise.resolve(null).then(() => {\n          this._flushPromise = /** @type {?} */(( null));\n          this._engine.flush();\n        });\n      });\n    }\n  }\n}\n\nfunction AnimationRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationRenderer.prototype.destroyNode;\n/** @type {?} */\nAnimationRenderer.prototype._flushPromise;\n/** @type {?} */\nAnimationRenderer.prototype.delegate;\n/** @type {?} */\nAnimationRenderer.prototype._engine;\n/** @type {?} */\nAnimationRenderer.prototype._zone;\n/** @type {?} */\nAnimationRenderer.prototype._namespaceId;\n}\n\n/**\n * @param {?} target\n * @return {?}\n */\nfunction resolveElementFromTarget(target: 'window' | 'document' | 'body' | any): any {\n  switch (target) {\n    case 'body':\n      return document.body;\n    case 'document':\n      return document;\n    case 'window':\n      return window;\n    default:\n      return target;\n  }\n}\n/**\n * @param {?} triggerName\n * @return {?}\n */\nfunction parseTriggerCallbackName(triggerName: string) {\n  const /** @type {?} */ dotIndex = triggerName.indexOf('.');\n  const /** @type {?} */ trigger = triggerName.substring(0, dotIndex);\n  const /** @type {?} */ phase = triggerName.substr(dotIndex + 1);\n  return [trigger, phase];\n}\n/**\n * @param {?} namespaceId\n * @param {?} value\n * @return {?}\n */\nfunction namespaceify(namespaceId: string, value: string): string {\n  return `${namespaceId}#${value}`;\n}\n/**\n * @param {?} namespaceId\n * @param {?} value\n * @return {?}\n */\nfunction deNamespaceify(namespaceId: string, value: string): string {\n  return value.replace(namespaceId + '#', '');\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["DomRendererFactory2"],"mappings":"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"}